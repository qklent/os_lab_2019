Шаг 1: Основные компоненты Makefile

1.1. Переменные: CC=gcc : Определяет компилятор (в данном случае gcc) CFLAGS=-I. : Определяет флаги компилятора (здесь -I. означает искать заголовочные файлы в текущей директории)

1.2. Правила: Остальная часть файла состоит из правил, каждое из которых имеет цель, зависимости и команды.

Шаг 2: Разбор правил

2.1. Правило для sequential_min_max: Цель: sequential_min_max Зависимости: utils.o, find_min_max.o, utils.h, find_min_max.h Команда: Компилирует sequential_min_max.c с объектными файлами в исполняемый файл

2.2. Правило для parallel_min_max: Аналогично sequential_min_max, но для parallel_min_max.c

2.3. Правило для utils.o: Компилирует utils.c в объектный файл

2.4. Правило для find_min_max.o: Компилирует find_min_max.c в объектный файл

2.5. Правило clean: Удаляет все созданные файлы

Шаг 3: Использование Makefile

3.1. Для компиляции всего проекта: Просто выполните команду 'make' в директории с Makefile. Это создаст оба исполняемых файла: sequential_min_max и parallel_min_max.

3.2. Для компиляции конкретной цели: Используйте 'make <цель>', например:

    'make sequential_min_max' для компиляции только sequential_min_max
    'make parallel_min_max' для компиляции только parallel_min_max

3.3. Для очистки проекта: Выполните 'make clean', чтобы удалить все скомпилированные файлы

3.4. Автоматическое отслеживание изменений: Make автоматически перекомпилирует только те файлы, которые изменились с момента последней компиляции.